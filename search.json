[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Curso: Geoanálisis",
    "section": "",
    "text": "Antecedentes\nEste libro corresponde al material de estudio del curso de Geoanálisis del Diplomado en Ciencia de Datos para Políticas Públicas 2024, dictado por Escuela de Gobierno de la Universidad Adolfo Ibáñez.",
    "crumbs": [
      "Antecedentes"
    ]
  },
  {
    "objectID": "index.html#introducción",
    "href": "index.html#introducción",
    "title": "Curso: Geoanálisis",
    "section": "Introducción",
    "text": "Introducción\nEste curso está diseñado para proporcionar a los estudiantes una sólida base teórica y competencias técnicas para realizar análisis espacial de variables territoriales en múltiples áreas de aplicación. Se destaca el uso del lenguaje de programación R para implementar metodologías avanzadas y automatizadas, con un enfoque en resolver desafíos complejos en políticas públicas, facilitando la toma de decisiones informadas por evidencia territorial.",
    "crumbs": [
      "Antecedentes"
    ]
  },
  {
    "objectID": "index.html#objetivos",
    "href": "index.html#objetivos",
    "title": "Curso: Geoanálisis",
    "section": "Objetivos",
    "text": "Objetivos\nEl objetivo general es proporcionar a los estudiantes los fundamentos, técnicas y aspectos básicos para analizar, modelar y representar información espacial, para apoyar la toma de decisiones con evidencia territorial robusta.\nLos objetivos específicos son:\n\nConocer los conceptos básicos del geoanálisis.\nManipular datos espaciales en R.\nConocer técnicas de inferencia, autocorrelación, regresión espacial y Clustering.\nAplicar las técnicas a problemas de interés público.",
    "crumbs": [
      "Antecedentes"
    ]
  },
  {
    "objectID": "index.html#modulos",
    "href": "index.html#modulos",
    "title": "Curso: Geoanálisis",
    "section": "Modulos",
    "text": "Modulos\n\n\n\nModulos\n\n\n\nIntroducción a la Estadística Espacial y a Datos Espaciales\nManejo y Representación de datos vectoriales, construcción de indicadores\nManejo y Representación de datos raster, construcción de indicadores\nInferencia Espacial: Interpolación y mapas de calor\nRelaciones de Vecindad y autocorrelación espacial\nModelos de Regresión Espacial",
    "crumbs": [
      "Antecedentes"
    ]
  },
  {
    "objectID": "index.html#docentes",
    "href": "index.html#docentes",
    "title": "Curso: Geoanálisis",
    "section": "Docentes",
    "text": "Docentes\n\nProfesor:\n\nDenis Berroeta González (denis.berroeta@uai.cl)\n\n\n\nCoordinador de Investigación Centro de Inteligencia Territorial UAI\nMagister en Inteligencia Artificial FIC-UAI\nDoctorado y Master of Data Science FIC-UAI (cursando)\nIngeniero en Prevención en Riesgos\n\n\nAyudante:\n\nEduardo Silva Gaete (eduardo.silva.g@edu.uai.cl)\n\n\n\nEstudiante de Ingeniería Civil Eléctrica UChile\nEstudiante de Magister en Ciecnia de Datos UCHile",
    "crumbs": [
      "Antecedentes"
    ]
  },
  {
    "objectID": "intro_estad_esp.html",
    "href": "intro_estad_esp.html",
    "title": "1  Estadística Espacial",
    "section": "",
    "text": "1.1 Objetivos",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Estadística Espacial</span>"
    ]
  },
  {
    "objectID": "intro_estad_esp.html#objetivos",
    "href": "intro_estad_esp.html#objetivos",
    "title": "1  Estadística Espacial",
    "section": "",
    "text": "Objetivos\n\n\n\nConocer teóricos fundamentales de la estadística espacial.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Estadística Espacial</span>"
    ]
  },
  {
    "objectID": "intro_estad_esp.html#origen-de-la-estadística",
    "href": "intro_estad_esp.html#origen-de-la-estadística",
    "title": "1  Estadística Espacial",
    "section": "1.2 Origen de la Estadística",
    "text": "1.2 Origen de la Estadística\nEstadística deriva del italiano statista (hombre de Estado) y se desarrolla desde la antigüedad para facilitar la gestión tributaria y estimar la capacidad bélica de un reino. Ej: censos egipcios desde el 3050 a.C.\nDurante la expansión de los imperios coloniales (siglos XVI - XIX) se desarrolla la estadística en estrecha relación con la cartografía, principalmente para la administración y dominio de territorios.\n\n\n\nOrigen de la Estadística",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Estadística Espacial</span>"
    ]
  },
  {
    "objectID": "intro_estad_esp.html#definición-general",
    "href": "intro_estad_esp.html#definición-general",
    "title": "1  Estadística Espacial",
    "section": "1.3 Definición General",
    "text": "1.3 Definición General\nLa estadística es una herramienta fundamental en la ciencia de datos que nos permite comprender y analizar datos para obtener información significativa. En términos simples, es como un lenguaje que utilizamos para describir, resumir y tomar decisiones basadas en la información que los datos nos proporcionan. Al aplicar métodos estadísticos, podemos identificar patrones, tendencias y relaciones en los datos, lo que es esencial tanto para la investigación académica como para la toma de decisiones en el mundo real.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Estadística Espacial</span>"
    ]
  },
  {
    "objectID": "intro_estad_esp.html#estadística-vs-estadística-espacial",
    "href": "intro_estad_esp.html#estadística-vs-estadística-espacial",
    "title": "1  Estadística Espacial",
    "section": "1.4 Estadística vs Estadística Espacial",
    "text": "1.4 Estadística vs Estadística Espacial\nLa estadística en general es una disciplina amplia que se aplica a diversos tipos de datos y problemas, utilizando métodos estadísticos convencionales. La estadística espacial, por otro lado, se enfoca en datos con ubicaciones geográficas explícitas y se especializa en el análisis de la dependencia espacial y la modelización de patrones espaciales.\nEstadística:\n\nAnálisis de la estructura de datos representativos de una población (en áreas arbitrarias)\nSe basa en matemáticas relativamente complejas\n\n Geoestadística\n\nAnálisis de relaciones de dependencia espacial entre datos georreferenciados y modelamiento de datos espacilizados.\nComplejidad de cálculo que hacía inviable su uso masivo\n\n\n\n\nDependencia espacial en geoestadística",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Estadística Espacial</span>"
    ]
  },
  {
    "objectID": "intro_estad_esp.html#condideraciones-generales",
    "href": "intro_estad_esp.html#condideraciones-generales",
    "title": "1  Estadística Espacial",
    "section": "1.5 Condideraciones generales",
    "text": "1.5 Condideraciones generales\nLa inferencia estadística convencional se basa en dos supuestos fundamentales\n\nLos valores de una variable se distribuyen de forma aleatoria\nLos valores de una variable son independientes unos de otros\n\nPero ninguno de estos dos supuestos se cumple al utilizar datos espaciales, ya que:\n\nLos fenómenos más próximos en el espacio están más estrechamente relacionados entre sí. Ley de Tobler (1970)\nLa historia, el espacio y la sociedad se co-producen, por lo que el espacio tiene un rol activo en la reproducción y acumulación de fenómenos sociales. Lefebvre (1974)\n\nPara resolver esta limitación existen dos enfoques principales\n\nLa econometría espacial, que trata el efecto espacial como un error y lo elimina para generar estimaciones sin sesgo\nLa geoestadística, que identifica y cuantifica el efecto que el espacio genera en la estructura de la información",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Estadística Espacial</span>"
    ]
  },
  {
    "objectID": "intro_estad_esp.html#ejemplos-de-correlación-espacial",
    "href": "intro_estad_esp.html#ejemplos-de-correlación-espacial",
    "title": "1  Estadística Espacial",
    "section": "1.6 Ejemplos de Correlación Espacial",
    "text": "1.6 Ejemplos de Correlación Espacial\n\n1.6.1 Autoproducción: Tráfico de Drogas\n\n\n\nAutoproducción Espacial en tráfico de Drogas\n\n\n\n\n1.6.2 Co-producción: Mercado inmobiliario local\n\n\n\nCo-producción Espacial en Mercado inmobiliario local\n\n\n\n\n1.6.3 Segregación y delincuencia\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1.6.4 Valores de Vivienda\n\n\n\nValores de Vivienda",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Estadística Espacial</span>"
    ]
  },
  {
    "objectID": "intro_estad_esp.html#inconsistencia-estadística-de-datos-espaciales-agregados-maup",
    "href": "intro_estad_esp.html#inconsistencia-estadística-de-datos-espaciales-agregados-maup",
    "title": "1  Estadística Espacial",
    "section": "1.7 Inconsistencia estadística de datos espaciales agregados: MAUP",
    "text": "1.7 Inconsistencia estadística de datos espaciales agregados: MAUP\nModifiable Areal Unit Problem: inconsistencia de indicadores estadísticos al modificar los perímetros de agregación (Gehlke & Biehl 1934, Openshaw & Taylor 1979)\n\n\n\nModifiable Areal Unit Problem\n\n\nEn general, es recomendable trabajar con datos a la menor escala posible, o agregarlos en zonas homogéneas\n\n\n\n\nLefebvre, Henri. 1974. “La Production de lespace.” L Homme Et La Société 31 (1): 15–32. https://doi.org/10.3406/homso.1974.1855.\n\n\nTobler, W. R. 1970. “A Computer Movie Simulating Urban Growth in the Detroit Region.” Economic Geography 46 (June): 234. https://doi.org/10.2307/143141.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Estadística Espacial</span>"
    ]
  },
  {
    "objectID": "datos_espaciales.html",
    "href": "datos_espaciales.html",
    "title": "2  Datos Espaciales",
    "section": "",
    "text": "2.1 Objetivos del Módulo\nLa presente Sesión tiene como objetivo principal introducir conceptos generales y manipulación básica de datos de tipo vectorial (punto, lineas, polígonos) y Raster, ambos con casos prácticos.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Datos Espaciales</span>"
    ]
  },
  {
    "objectID": "datos_espaciales.html#objetivos-del-módulo",
    "href": "datos_espaciales.html#objetivos-del-módulo",
    "title": "2  Datos Espaciales",
    "section": "",
    "text": "Objetivos",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Datos Espaciales</span>"
    ]
  },
  {
    "objectID": "datos_espaciales.html#definición-general-de-datos-espaciales",
    "href": "datos_espaciales.html#definición-general-de-datos-espaciales",
    "title": "2  Datos Espaciales",
    "section": "2.2 Definición General de Datos Espaciales",
    "text": "2.2 Definición General de Datos Espaciales\nLa representación de un territorio requiere datos geográficos compuestos por información espacial (geometrías asociadas a una ubicación real en el mundo) e información de atributos (características y variables asociadas a estas geometrías). Los tipos de datos espaciales principalmente los vectores y raster.\n\n\n\nCapas de datos espaciales",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Datos Espaciales</span>"
    ]
  },
  {
    "objectID": "datos_espaciales.html#datos-vectoriales",
    "href": "datos_espaciales.html#datos-vectoriales",
    "title": "2  Datos Espaciales",
    "section": "2.3 Datos Vectoriales",
    "text": "2.3 Datos Vectoriales\n\nDatos Vectoriales\n\nRepresentación mediante coordenadas que se pueden unir espacialmente o no. Corresponde a 3 tipos de geometrías: puntos, líneas y polígonos.\n\n\n\nFuente: https://r-spatial.github.io/sf/articles/sf1.html\n\nPuntos\n\nTiene un par de coordenadas “x” e “y”. Es utilizado para información de tipo puntual, como por ejemplo equipamiento urbano, postes, árboles, entre otros.\n\n\n\n\n\nObjeto vectorial tipo punto\n\n\nCargar librerías\n\n# install.packages(\"sf\") \nlibrary(sf) # manipulación de datos vectoriales\nlibrary(mapview) # visualización de mapas dinámicos\nlibrary(ggplot2) # gráficos\nlibrary(RColorBrewer) #paleta de colores\n\n\n2.3.1 Lectura de archivos tipo puntos\n\nsii_LC &lt;- st_read(\"data/sii/sii_urbe_LC.shp\")\n\nReading layer `sii_urbe_LC' from data source \n  `/Users/denisberroeta/Documents/Docencia/Goblab/geoanalisis_book/data/sii/sii_urbe_LC.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2310 features and 11 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: -70.60645 ymin: -33.44471 xmax: -70.47083 ymax: -33.36548\nGeodetic CRS:  GCS_unknown\n\n\n\n\n2.3.2 Visualización de los puntos\n\n# Visualización ggplot y sf\nggplot() +\n  geom_sf(data = sii_LC, col = \"orange\", alpha=0.8,  size= 0.5)+\n  ggtitle(\"Datos del SII en Las Condes\" ) +\n  theme_bw() +\n  theme(legend.position=\"none\")+\n  theme(panel.grid.major = element_line(colour = \"gray80\"), \n        panel.grid.minor = element_line(colour = \"gray80\"))\n\n\n\n\n\n\n\n# mapview(sii_LC, zcol = \"atractor\", cex =2)\n\n\nLíneas\n\nTiene tantas coordenadas como vértices. La información que representa es de tipo lineal, como por ejemplo calles, ríos, redes energéticas, entre otros. Existen las líneas cerradas, las cuales se pueden entender como el perímetro de una superficie (sin relleno).\n\n\n\n\n\nObjeto vectorial tipo Línea\n\n\n\n\n2.3.3 Lectura de líneas\n\nlas_condes_red &lt;- readRDS(\"data/redes/RED_LAS_CONDES.rds\") \n# las_condes_red\n\n\n\n2.3.4 visualización Líneas\n\nggplot() +\n  geom_sf(data = las_condes_red, col = \"gray70\", alpha=0.8,  size= 0.5)+\n  ggtitle(\"Red víal de la comuna Las Condes\" ) +\n  theme_bw() +\n  theme(legend.position=\"none\")+\n  theme(panel.grid.major = element_line(colour = \"gray80\"), \n        panel.grid.minor = element_line(colour = \"gray80\"))\n\n\n\n\n\n\n\n# mapview(las_condes_red)\n\n\nPolígonos\n\nTiene tantas coordenadas como vértices. La información que representa es de tipo área, como por ejemplo división política administrativa, manzanas, construcciones, entre otras.\n\n\n\n\n\nObjeto vectorial tipo polígono\n\n\n\n\n2.3.5 Lectura de polígonos\n\nlas_condes_mz &lt;- st_read(\"data/shape/icv_las_condes.shp\", quiet=T) \n# las_condes_ptos\n\n\n\n2.3.6 Visualización polígonos\n\nggplot() +\n  geom_sf(data = las_condes_mz, aes(fill = veg_cob), color =\"gray80\", \n          alpha=0.8,  size= 0.1)+\n  scale_fill_distiller(palette=\"Greens\", direction = 1)+\n  ggtitle(\"Cobertura Vegetal de la comuna Las Condes\" ) +\n  theme_bw() +\n  theme(panel.grid.major = element_line(colour = \"gray80\"), \n        panel.grid.minor = element_line(colour = \"gray80\"))\n\n\n\n\n\n\n\n# mapview(las_condes_mz, zcol = \"veg_cob\")\n\nTabla General de tipo de Datos Vectoriales\n\n\n\n\n\n\n\ntype\ndescription\n\n\n\n\nPOINT\nzero-dimensional geometry containing a single point\n\n\nLINESTRING\nsequence of points connected by straight, non-self intersecting line pieces; one-dimensional geometry\n\n\nPOLYGON\ngeometry with a positive area (two-dimensional); sequence of points form a closed, non-self intersecting ring; the first ring denotes the exterior ring, zero or more subsequent rings denote holes in this exterior ring\n\n\nMULTIPOINT\nset of points; a MULTIPOINT is simple if no two Points in the MULTIPOINT are equal\n\n\nMULTILINESTRING\nset of linestrings\n\n\nMULTIPOLYGON\nset of polygons\n\n\nGEOMETRYCOLLECTION\nset of geometries of any type except GEOMETRYCOLLECTION\n\n\n\n\n\n\nCapas de datos tipos raster y vectores",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Datos Espaciales</span>"
    ]
  },
  {
    "objectID": "datos_espaciales.html#datos-raster",
    "href": "datos_espaciales.html#datos-raster",
    "title": "2  Datos Espaciales",
    "section": "2.4 Datos Raster",
    "text": "2.4 Datos Raster\n\nRaster\n\nRepresentación del espacio mediante una matriz de celdas organizada en filas y columnas, donde cada celda tiene un valor que representa información.\n\n\n\n\n\nRepresentación Raster\n\n\n\n\n\nResolución Raster\n\n\nPara ejemplificar el uso y ver características de Raster vamos a utilizar una imágenes satelital del Satelite Landsat 8.\n\n\n\nImágenes Satelitales\n\n\nEste tipos de imágenes satelitales generalmente contiene una series de de bandas que corresponden a capas de información tipos raster conformando una especie de brick de raster.\n\n\n\nConfiguración de Bandas\n\n\nPara este ejemplo de visualización necesitamos conocer las bandas satelitales que componen nuestra imagen satelital.\n\n\n\nBandas de Landsat 8\n\n\n\n2.4.1 lectura de imagen Raster.\n\nlibrary(raster)\nlas_condes_raster &lt;- brick(\"data/raster/OLI_LC.tif\")\nnames(las_condes_raster) &lt;- c(\"aerosol\", \"blue\", \"green\", \"red\" , \"nir\", \"swir1\", \"swir2\", \"tirs1\")\nlas_condes_raster\n\nclass      : RasterBrick \ndimensions : 449, 562, 252338, 8  (nrow, ncol, ncell, nlayers)\nresolution : 30, 30  (x, y)\nextent     : 350505, 367365, 6293905, 6307375  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=19 +south +datum=WGS84 +units=m +no_defs \nsource     : OLI_LC.tif \nnames      : aerosol,  blue, green,   red,   nir, swir1, swir2, tirs1 \nmin values :    8465,  7604,  6500,  5924,  5520,  5191,  5197,  5002 \nmax values :   19119, 20517, 21248, 23237, 29344, 30012, 31166,  5512 \n\n\n\n\n2.4.2 Visualización Raster\n\n# Visualización de imagen recortada de Las Condes en Color Natural\nplotRGB(las_condes_raster, r = 4, g = 3, b = 2, stretch = \"lin\")\n\n\n\n\n\n\n\n# viewRGB(las_condes_raster, r = 4, g = 3, b = 2)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Datos Espaciales</span>"
    ]
  },
  {
    "objectID": "datos_espaciales.html#sistema-de-referencias-de-coordenadas",
    "href": "datos_espaciales.html#sistema-de-referencias-de-coordenadas",
    "title": "2  Datos Espaciales",
    "section": "2.5 Sistema de Referencias de Coordenadas",
    "text": "2.5 Sistema de Referencias de Coordenadas\n\n\n\nSistema de Referencias de Coordenadas\n\n\nLos sistemas de coordenadas forman la base de cálculo para describir la posición de un punto a partir de mediciones geodésicas: distancias, proporciones de distancias (sin escala) y ángulos. Las coordenadas nunca pueden medirse, solamente se calculan con referencia un sistema de coordenadas bien definido. Los tipos de sistemas de coordenadas principales que existen son:\n\nCoordenadas elipsoidales\n\nson la representación de las coordenadas sobre la superficie de un elipsoide determinado, se representan por [φ, λ, h] siendo respectivamente, la latitud, longitud y altura elipsoidal.\n\n\n\n\n\nCoordenadas Geodésicas. Fuente: (Drewes & Sánchez, 2011)\n\n\n\nCoordenadas proyectadas o cartográficas\n\nSegún la proyección empleada las coordenadas elipsoidales pueden representarse en un plano, en el caso de Chile continental, se emplea la proyección Universal Transversal de Mercator (UTM), huso 19 y huso 18.\n\n\n\n\n\nproyección Universal Transversal Mercator (UTM) Fuente: (Drewes & Sánchez, 2011)\n\n\nPara hacer reproyecciones en R, se le tiene que asignar el Sistema de Referencia de Coordenadas de dos formas, uno como cadena de texto (\"+proj=longlat +datum=WGS84 +no_defs\") o como número que corresponde a EPSG (EPSG es el acrónimo de European Petroleum Survey Group) que representan sistema de referencia de coordenadas también.\nPara el caso de Chile usamos dos sistemas de referencias de coordenadas:\n\nCoordenadas elipsoidales (geodésicas):\n\n4326 o \"+proj=longlat +datum=WGS84 +no_defs\"\n\nCoordenadas proyectadas (métricas):\n\n32719 o \"+proj=utm +zone=19 +south +datum=WGS84 +units=m +no_defs\"\n\n\n\n2.5.1 Reproyectar Vectores\n\nLC_mz_32719 &lt;- las_condes_mz %&gt;% st_transform(32719)\nst_crs(LC_mz_32719)\n\nCoordinate Reference System:\n  User input: EPSG:32719 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 19S\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 19S\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",-69,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",10000000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Engineering survey, topographic mapping.\"],\n        AREA[\"Between 72°W and 66°W, southern hemisphere between 80°S and equator, onshore and offshore. Argentina. Bolivia. Brazil. Chile. Colombia. Peru.\"],\n        BBOX[-80,-72,0,-66]],\n    ID[\"EPSG\",32719]]\n\n\n\n\n2.5.2 Reproyectar Raster\n\n# las_condes_raster\ncrs_latlon &lt;- \"+proj=longlat +datum=WGS84 +no_defs\"# geográficas o elipsoidales\ncrs_utm &lt;- \"+proj=utm +zone=19 +south +datum=WGS84 +units=m +no_defs\" # UTM o cartográficas\nlas_condes_raster2 &lt;- projectRaster(from= las_condes_raster,                                             crs = crs_latlon)\nlas_condes_raster2\n\nclass      : RasterBrick \ndimensions : 470, 578, 271660, 8  (nrow, ncol, ncell, nlayers)\nresolution : 0.000323, 0.00027  (x, y)\nextent     : -70.61069, -70.424, -33.48775, -33.36085  (xmin, xmax, ymin, ymax)\ncrs        : +proj=longlat +datum=WGS84 +no_defs \nsource     : memory\nnames      :  aerosol,     blue,    green,      red,      nir,    swir1,    swir2,    tirs1 \nmin values : 8592.067, 7778.388, 6806.291, 6280.802, 5729.628, 5316.893, 5303.627, 5005.409 \nmax values : 18590.84, 19485.05, 20596.61, 22406.07, 28732.09, 26707.17, 26787.15,  5495.00",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Datos Espaciales</span>"
    ]
  },
  {
    "objectID": "datos_espaciales.html#referencias",
    "href": "datos_espaciales.html#referencias",
    "title": "2  Datos Espaciales",
    "section": "2.6 Referencias",
    "text": "2.6 Referencias\nGeodesia en Chile, teoría y aplicación del Sistema de Referencia Geocéntrico para las Américas (SIRGAS) - 2018\nSimple Features for R",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Datos Espaciales</span>"
    ]
  },
  {
    "objectID": "datos_vectoriales.html",
    "href": "datos_vectoriales.html",
    "title": "3  Datos Vectoriales",
    "section": "",
    "text": "3.1 Introducción\nLos datos vectoriales son uno de los tipos fundamentales en los que se representa la información espacial. Este formato se caracteriza por describir los elementos del espacio a través de puntos, líneas y polígonos. Cada uno de estos objetos puede tener atributos asociados que describen características adicionales como el uso del suelo, la densidad poblacional, o cualquier otra variable relevante para el análisis.\nEn políticas públicas, los datos vectoriales juegan un rol clave en la toma de decisiones, ya que permiten analizar la distribución espacial de fenómenos, desde la localización de infraestructuras hasta la incidencia de eventos sociales y delictivos. A través de las herramientas de análisis vectorial, es posible identificar patrones, relaciones espaciales y tomar decisiones fundamentadas sobre la planificación y gestión del territorio.\nEn este capítulo, utilizaremos la librería sf para la lectura y manipulación de datos vectoriales en R. Esta librería es ampliamente utilizada en la comunidad de análisis espacial debido a su eficiencia y su integración con otras herramientas como dplyr para el manejo de tablas de atributos.\nTipos de Datos Vectoriales espaciales básicos\nObjetivos del Módulo",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Datos Vectoriales</span>"
    ]
  },
  {
    "objectID": "datos_vectoriales.html#introducción",
    "href": "datos_vectoriales.html#introducción",
    "title": "3  Datos Vectoriales",
    "section": "",
    "text": "Introducción\n\n\n\n\n\n\n\n\n\n\ntype\ndescription\n\n\n\n\nPOINT\nzero-dimensional geometry containing a single point\n\n\nLINESTRING\nsequence of points connected by straight, non-self intersecting line pieces; one-dimensional geometry\n\n\nPOLYGON\ngeometry with a positive area (two-dimensional); sequence of points form a closed, non-self intersecting ring; the first ring denotes the exterior ring, zero or more subsequent rings denote holes in this exterior ring\n\n\nMULTIPOINT\nset of points; a MULTIPOINT is simple if no two Points in the MULTIPOINT are equal\n\n\nMULTILINESTRING\nset of linestrings\n\n\nMULTIPOLYGON\nset of polygons\n\n\nGEOMETRYCOLLECTION\nset of geometries of any type except GEOMETRYCOLLECTION\n\n\n\n\n\n\nManipulación de Datos Vectoriales\nOperaciones Espaciales\nEjemplo de Delitos",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Datos Vectoriales</span>"
    ]
  },
  {
    "objectID": "datos_vectoriales.html#manipulación-de-datos-vectoriales",
    "href": "datos_vectoriales.html#manipulación-de-datos-vectoriales",
    "title": "3  Datos Vectoriales",
    "section": "3.2 Manipulación de Datos Vectoriales",
    "text": "3.2 Manipulación de Datos Vectoriales\nAdemás de las geometrías espaciales, los datos vectoriales incluyen una tabla de atributos que contiene información adicional sobre cada objeto espacial. Esta tabla de atributos es esencial para realizar análisis más profundos, ya que nos permite filtrar, seleccionar, crear columnas nuevas y resumir los datos según diferentes criterios.\nPara la manipulación de datos vectoriales se usará la sección de atributos que la estructura sf permite para lo cual utilizaremos la librería dplyr cómo si fuera un dataframe.\n\n3.2.1 Lectura de Insumos\n\n\n\nAl leer un archivo vectorial, obtenemos un objeto sf que combina tanto la geometría como la tabla de atributos.\n\n\nEl paquete sf facilita la importación de estos datos, que suelen estar en formatos como shapefile (.shp) o GeoJSON (.geojson), etc. la función nativa para esto es st_read(). Para los efectos prácticos de esta etapa se utilizará la base de datos del censo a nivel zonal a nivel nacional que en este caso esta almacenado bajo la estrucura rds nativa de R, pero manteniendo todos los atributos y geometrías espaciales.\nCargar librerías\n\n# install.packages(\"sf\") \nlibrary(sf) # manipulación de datos vectoriales\nlibrary(dplyr) # manipulación de tablas de atributos\nlibrary(mapview) # visualización de mapas dinámicos\nlibrary(ggplot2) # gráficos\nlibrary(RColorBrewer) #paleta de colores\nlibrary(viridis) #paleta de colores\n\n\n# sii_LC &lt;- st_read(\"data/sii/sii_urbe_LC.shp\")\nzonas_censales &lt;-  readRDS(\"data/censo/zonas_urb_consolidadas.rds\")\n\n\n\n\n\nTable 3.1: Registros de Zonas Censales del Censo 2017\n\n\n\n\n\n\n\nREGION\nNOM_REGION\nPROVINCIA\nNOM_PROVIN\nCOMUNA\nNOM_COMUNA\nURBANO\nDISTRITO\nLOC_ZON\nGEOCODIGO\nAREA\nCOD_INE_15\nCOD_INE_16\nVALIDO\nKM2\nESC_JH\nPERS\nM2_O\nM2_C\nDENS_HAB\nDENS_OF\nDENS_COM\ngeometry\n\n\n\n\n1\nREGIÓN DE TARAPACÁ\n14\nTAMARUGAL\n1405\nPICA\nPICA\n1\n1\n1405011001\n9336400.3\n1405011001\n1405011001\nTRUE\n9.3364003\n10.817377\n3876\n0.0000\n0.0000\n415.1493\n0.0000\n0.00000\nMULTIPOLYGON (((-69.31192 -...\n\n\n1\nREGIÓN DE TARAPACÁ\n14\nTAMARUGAL\n1401\nPOZO ALMONTE\nPOZO ALMONTE\n1\n1\n1401011001\n1941994.2\n1401011001\n1401011001\nTRUE\n1.9419942\n10.224880\n2771\n1476.0000\n4093.0000\n1426.8838\n760.0435\n2107.62731\nMULTIPOLYGON (((-69.78591 -...\n\n\n1\nREGIÓN DE TARAPACÁ\n14\nTAMARUGAL\n1401\nPOZO ALMONTE\nPOZO ALMONTE\n1\n2\n1401011002\n3572254.9\n1401011002\n1401011002\nTRUE\n3.5722549\n10.253158\n6506\n1905.0000\n9696.0000\n1821.2586\n533.2766\n2714.25201\nMULTIPOLYGON (((-69.76215 -...\n\n\n1\nREGIÓN DE TARAPACÁ\n14\nTAMARUGAL\n1404\nHUARA\nHUARA\n1\n1\n1404011001\n603314.2\n1404011001\n1404011001\nTRUE\n0.6033142\n9.523220\n1082\n0.0000\n0.0000\n1793.4270\n0.0000\n0.00000\nMULTIPOLYGON (((-69.7696 -1...\n\n\n1\nREGIÓN DE TARAPACÁ\n11\nIQUIQUE\n1107\nALTO HOSPICIO\nALTO HOSPICIO\n1\n2\n1107011002\n2272129.2\n1107011002\n1107011002\nTRUE\n2.2721292\n9.747321\n4360\n475.0686\n180.6789\n1918.9050\n209.0852\n79.51965\nMULTIPOLYGON (((-70.09246 -...\n\n\n1\nREGIÓN DE TARAPACÁ\n11\nIQUIQUE\n1107\nALTO HOSPICIO\nALTO HOSPICIO\n3\n2\n1107031002\n5820325.8\n1107031002\n1107031002\nTRUE\n5.8203258\n9.397516\n7099\n4003.6214\n1008.7833\n1219.6912\n687.8690\n173.32076\nMULTIPOLYGON (((-70.05305 -...\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.2.2 Filtros y selección de columnas\nUno de los pasos más comunes en la manipulación de datos vectoriales es filtrar y seleccionar filas o columnas de la tabla de atributos, lo que permite centrarse en elementos específicos para análisis más detallados. Para efectos de practicar la manipulación de datos espaciales se creará un subset de la base de zonas censales de alguna provincia de Chile y se realizarán cálculos sencillos de densidad.\nFiltrar\n\n\n\n\n\n\nOperador\nComparación\nEjemplo\nResultado\n\n\n\n\nx | y\nx Ó y es verdadero\nTRUE | FALSE\nTRUE\n\n\nx & y\nx Y y son verdaderos\nTRUE & FALSE\nFALSE\n\n\n!x\nx no es verdadero (negación)\n!TRUE\nFALSE\n\n\nisTRUE(x)\nx es verdadero (afirmación)\nisTRUE(TRUE)\nTRUE\n\n\n\n\n\n\n\n\n\n # zonas_censales$NOM_PROVIN %&gt;% unique() %&gt;% sort()\nzonas &lt;-  zonas_censales %&gt;% \n  filter(NOM_PROVIN == \"VALPARAÍSO\") %&gt;% \n  filter(URBANO %in% c(\"VIÑA DEL MAR\", \"VALPARAÍSO\") )\n\n# mapview::mapview(zonas, zcol = \"PERS\")\n\n\nggplot() +\n  geom_sf(data = zonas, aes(fill = PERS), color =NA, \n          alpha=0.8,  size= 0.1)+\n  scale_fill_distiller(palette= \"YlGnBu\", direction = 1)+\n  ggtitle(\"Población Zonas Censales - Urbano\" ) +\n  theme_bw() +\n  theme(panel.grid.major = element_line(colour = \"gray80\"), \n        panel.grid.minor = element_line(colour = \"gray80\"))\n\n\n\n\n\n\n\nFigure 3.1: Zonas Censales de comunas de Valparaíso y Viña del Mar - Urbano\n\n\n\n\n\nSelección de columnas\n\nzonas &lt;-  zonas %&gt;% \n  dplyr::select(GEOCODIGO,NOM_REGION, NOM_PROVIN, \n                NOM_COMUNA, PERS, URBANO, ESC_JH)\n\nMutate\nCálculo de superficie por polígono\n\nzonas &lt;- zonas %&gt;% \n  mutate(AREA = as.numeric(st_area(.))) %&gt;% # en metros cuadrados\n  mutate(AREA = AREA/10000) %&gt;% # en hectárea cuadrada\n  mutate(DENS_PERS= round(PERS/AREA, 1))\n\n# zonas\n\nggplot() +\n  geom_sf(data = zonas, aes(fill = PERS), color =NA, \n          alpha=0.8,  size= 0.1)+\n  scale_fill_distiller(palette= \"YlGnBu\", direction = 1)+\n  ggtitle(\"Población Zonas Censales - Urbano\" ) +\n  theme_bw() +\n  theme(panel.grid.major = element_line(colour = \"gray80\"), \n        panel.grid.minor = element_line(colour = \"gray80\"))\nggplot() +\n  geom_sf(data = zonas, aes(fill = DENS_PERS), color =NA, \n          alpha=0.8,  size= 0.1)+\n  scale_fill_distiller(palette= \"YlGnBu\", direction = 1)+\n  ggtitle(\"Densidad de Población Zonas Censales - Urbano\" ) +\n  theme_bw() +\n  theme(panel.grid.major = element_line(colour = \"gray80\"), \n        panel.grid.minor = element_line(colour = \"gray80\"))\n\n\n\n\n\n\n\n\n\n\n\n\n3.2.3 Resumen Estadísticos\nEl objetivo de este punto es que con bases de datos espaciales también se pueden hacer resúmenes estadísticos, como se hacen normalmente con bases de datos. Ahora, se creará tabla con las poblaciones y promedio de años de estudio del Jefe de Hogar en todas las comunas de Chile.\nUn punto importante para generar esta tabla es eficiente eliminar la geometría para los cálculos ya que la salida será una tabla.\n\ntab_com &lt;- zonas_censales %&gt;% \n  st_drop_geometry() %&gt;% # eliminar geometría.\n  group_by(NOM_COMUNA) %&gt;% \n  summarise(POB_COM = sum(PERS, na.rm = T),\n            ESC_JH_COM = round(mean(ESC_JH, na.rm= T), 1))\n\n\n\n\n\nTable 3.2: Registros de Población y Escolaridad por Comuna\n\n\n\n\n\n\n\nNOM_COMUNA\nPOB_COM\nESC_JH_COM\n\n\n\n\nALGARROBO\n10880\n12.1\n\n\nALHUÉ\n2706\n9.6\n\n\nALTO HOSPICIO\n105065\n10.4\n\n\nANCUD\n28162\n10.0\n\n\nANDACOLLO\n9989\n8.8\n\n\nANGOL\n48608\n10.1\n\n\nANTOFAGASTA\n349983\n12.2\n\n\nANTUCO\n2038\n9.2\n\n\nARAUCO\n27274\n9.8\n\n\nARICA\n203132\n11.5\n\n\n\n\n\n\n\n\n\n\n\n\n\n3.2.4 Joining\nEn este caso agregaremos a la tabla de resultados comunales antes creada, a la base de la comuna de Viña del Mar y Valparaíso, utilizaremos la función left_join.\n\nzonas &lt;-  zonas %&gt;% \n  left_join(tab_com, by = \"NOM_COMUNA\") %&gt;% # Ojo con las veces que se hace esta operación\n  mutate(DIF_EJH_COM = round(( ESC_JH-ESC_JH_COM), 2))\n\n\nggplot() +\n  geom_sf(data = zonas, aes(fill = DIF_EJH_COM), color =NA, \n          alpha=0.8,  size= 0.1)+\n  scale_fill_distiller(palette= \"PRGn\", direction = 1)+\n  ggtitle(\"Diferencias Esc. Jefe Hogar Zona/Comuna - Urbano\" ) +\n  theme_bw() +\n  theme(panel.grid.major = element_line(colour = \"gray80\"), \n        panel.grid.minor = element_line(colour = \"gray80\"))\n\n\n\n\n\n\n\nFigure 3.2: Diferencias Esc. Jefe Hogar respecto comuna - Urbano",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Datos Vectoriales</span>"
    ]
  },
  {
    "objectID": "datos_vectoriales.html#operaciones-espaciales-con-sf",
    "href": "datos_vectoriales.html#operaciones-espaciales-con-sf",
    "title": "3  Datos Vectoriales",
    "section": "3.3 Operaciones Espaciales con sf",
    "text": "3.3 Operaciones Espaciales con sf\nLas operaciones espaciales son el conjunto de herramientas que permiten realizar cálculos y transformaciones sobre los datos espaciales vectoriales. Estas operaciones son fundamentales para análisis de proximidad, intersección, disolución de fronteras y creación de buffers, entre otras.\nPodemos clasificar las operaciones sobre geometrías en función de lo que toman como entrada y lo que devuelven como salida. En cuanto a la salida tenemos operaciones que devuelven:\n\npredicates: una lógica que afirma una determinada propiedad es TRUE\nmeasures: una cantidad (un valor numérico, posiblemente con unidad de medida)\ntransformations: nuevas geometrías generadas\n\ny en cuanto a lo que operan, distinguimos las operaciones que son:\n\nunary cuando trabajan en una única geometría\nbinary cuando trabajan con pares de geometrías\nn-ary cuando trabajan con conjuntos de geometrías\n\n\n3.3.1 Unary measures\nLas medidas unarias devuelven una medida o cantidad que describe una propiedad de la geometría:\n\n\n\n\n\n\n\nmedida\ndevuelve\n\n\n\n\ndimension\n0 para puntos, 1 para líneas, 2 para polígonos, posiblemente NA para geometrías vacías\n\n\narea\nel área de una geometría\n\n\nlength\nla longitud de una geometría lineal\n\n\n\nEjemplo cuando calculamos el área de cada polígono de zona censal.\n\n# st_area(zonas)\n\nzonas &lt;- zonas %&gt;% \n  mutate(AREA = as.numeric(st_area(.))) %&gt;% # en metros cuadrados\n  mutate(AREA = AREA/10000) %&gt;% # en hectárea cuadrada\n  mutate(DENS_PERS= round(PERS/AREA, 1))\n\n\n\n3.3.2 Unary predicates\nLos predicados unitarios describen una determinada propiedad de una geometría. Los predicados is_simple, is_valid, y is_empty devolver respectivamente si una geometría es simple, válida o vacía. Dado un sistema de referencia de coordenadas, is_longlat devuelve si las coordenadas son geográficas o proyectadas. es(geometría, clase)` comprueba si una geometría pertenece a una clase determinada.\n\nst_is_valid(zonas) %&gt;% head(10)\n\n [1] TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE TRUE",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Datos Vectoriales</span>"
    ]
  },
  {
    "objectID": "datos_vectoriales.html#binary-predicates",
    "href": "datos_vectoriales.html#binary-predicates",
    "title": "3  Datos Vectoriales",
    "section": "3.4 Binary Predicates",
    "text": "3.4 Binary Predicates\nUna lista de predicados binarios es:\n\n\n\n\n\n\n\n\npredicado\nsignificado\ninverso de\n\n\n\n\ncontains\nNinguno de los puntos de A está fuera de B\nwithin\n\n\ncontains_properly\nA contiene a B y B no tiene puntos en común con el límite de A\n\n\n\ncovers\nNingún punto de B está en el exterior de A\ncovered_by\n\n\ncovered_by\nInverso de covers\n\n\n\ncrosses\nA y B tienen algunos pero no todos los puntos interiores en común\n\n\n\ndisjoint\nA y B no tienen puntos en común\nintersects\n\n\nequals\nA y B son topológicamente iguales: el orden de los nodos o el número de nodos puede ser diferente; idéntico a A contiene B y A dentro de B\n\n\n\nequals_exact\nA y B son geométricamente iguales, y tienen el mismo orden de nodos\n\n\n\nintersects\nA y B no son disjuntos\ndisjoint\n\n\nis_within_distance\nA está más cerca de B que una distancia dada\n\n\n\nwithin\nNinguno de los puntos de B está fuera de A\ncontains\n\n\ntouches\nA y B tienen al menos un punto en el límite en común, pero ningún punto interior\n\n\n\noverlaps\nA y B tienen algunos puntos en común; la dimensión de estos es idéntica a la de A y B\n\n\n\nrelate\nDado un patrón de máscara, devuelve si A y B se adhieren a este patrón\n\n\n\n\nLa página DE-9IM de Wikipedia proporciona los patrones relate para cada uno de estos verbos. Es importante importante comprobarlos; por ejemplo, covers y contains (y sus (y sus inversos) no suelen ser del todo intuitivos:\n\nsi A contiene B, B no tiene puntos en común con el exterior o frontera de A\nsi A cubre B, B no tiene puntos en común con el exterior de A\n\n\n3.4.1 Unary transformers\nLas transformaciones unarias funcionan por geometría y devuelven para cada geometría una nueva geometría.\n\n\n\n\n\n\n\n\ntransformador\ndevuelve una geometría …\n\n\n\n\n\ncentroid\nde tipo POINT con el centroide de la geometría\n\n\n\nbuffer\nque es más grande (o más pequeña) que la geometría de entrada, dependiendo del tamaño del buffer\n\n\n\njitter\nque ha sido movida en el espacio una cierta cantidad, usando una distribución uniforme bivariada\n\n\n\nwrap_dateline\ncortada en piezas que ya no cruzan ni cubren la línea de cambio de fecha\n\n\n\nboundary\ncon el límite de la geometría de entrada\n\n\n\nconvex_hull\nque forma el envolvente convexo de la geometría de entrada\n\n\n\nline_merge\ndespués de unir elementos LINESTRING conectados de un MULTILINESTRING en LINESTRINGs más largos\n\n\n\nmake_valid\nque es válida\n\n\n\nnode\ncon nodos añadidos a geometrías lineales en las intersecciones sin nodo; solo funciona en geometrías lineales individuales\n\n\n\npoint_on_surface\ncon un (arbitrario) punto en una superficie\n\n\n\npolygonize\nde tipo polígono, creada a partir de líneas que forman un anillo cerrado\n\n\n\nsegmentize\nuna geometría (lineal) con nodos a una densidad o distancia mínima dada\n\n\n\nsimplify\nsimplificada mediante la eliminación de vértices/nodos (líneas o polígonos)\n\n\n\nsplit\nque ha sido dividida con una línea divisoria\n\n\n\ntransform\ntransformada o convertida a un nuevo sistema de referencia de coordenadas\n\n\n\ntriangulate\ncon polígonos triangulados de Delaunay\n\n\n\nvoronoi\ncon la teselación de Voronoi de una geometría de entrada\n\n\n\nzm\ncon coordenadas Z y/o M eliminadas o añadidas\n\n\n\ncollection_extract\ncon sub-geometrías de un GEOMETRYCOLLECTION de un tipo particular\n\n\n\ncast\nque se convierte a otro tipo\n\n\n\n+\nque se desplaza sobre un vector dado\n\n\n\n*\nque se multiplica por un escalar o matriz\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 3.3: Para un conjunto de puntos, izquierda: Convex Hull (rojo); centro: Polígonos de Voronoi; derecha: triangulación de Delauney\n\n\n\n\n\n\nTransformación de CRS\nLos sistemas de coordenadas forman la base de cálculo para describir la posición de un punto a partir de mediciones geodésicas: distancias, proporciones de distancias (sin escala) y ángulos. Las coordenadas nunca pueden medirse, solamente se calculan con referencia un sistema de coordenadas bien definido.\nPara el caso de Chile usamos dos sistemas de referencias de coordenadas:\n\nCoordenadas elipsoidales (geodésicas):\n\n4326 o \"+proj=longlat +datum=WGS84 +no_defs\"\n\nCoordenadas proyectadas (métricas):\n\n32719 o \"+proj=utm +zone=19 +south +datum=WGS84 +units=m +no_defs\"\n\n\nLas medidas unarias devuelven una medida o cantidad que describe una propiedad de la geometría:\nReproyectar Vectores\n\nzonas_utm &lt;- zonas %&gt;% st_transform(32719)\n# st_crs(zonas_utm)\n# st_is_empty(zonas_utm) %&gt;% table()\n\n\n\nUnión de Polígonos\nPrimeramente se creará una geometría comunal basándose en las zonas censales utilizando la función st_union()\n\nvalpo_com &lt;-  zonas %&gt;% filter(NOM_COMUNA == \"VALPARAÍSO\") %&gt;% \n  st_union()\n\n\nggplot() +\n  geom_sf(data = zonas, aes(fill = DIF_EJH_COM), color =NA, \n          alpha=0.3,  size= 0.1)+\n  scale_fill_distiller(palette= \"PRGn\", direction = 1)+\n  geom_sf(data = valpo_com,  color =\"magenta\", alpha=1,  size= 1, fill = NA)+\n  ggtitle(\"Resaltar la comuna de Valparaíso\" ) +\n  theme_bw() +\n  theme(panel.grid.major = element_line(colour = \"gray80\"), \n        panel.grid.minor = element_line(colour = \"gray80\"))\n\n\n\n\n\n\n\nFigure 3.4: Resaltar la comuna de Valparaíso\n\n\n\n\n\n\n\nBuffer\nAplicación de Buffer con la función de st_buffer, que tiene el parámetro distque dice relación a los metros que se quiere hacer el buffer (también puede ser negativo)\n\n#buffer exterior cuando el valor  de dist es positivo\nvalpo_com_buffer &lt;-  valpo_com %&gt;% \n  st_buffer(dist = 1000) # %&gt;% st_simplify(dTolerance = 100) \n\n#buffer interior cuando el valor de dist es negativo\nvalpo_com_buffer_menos &lt;-  valpo_com %&gt;% \n  st_buffer(dist = - 500) # %&gt;% st_simplify(dTolerance = 100) \n\n\nggplot() +\n  geom_sf(data = valpo_com,  color =\"magenta\", alpha=0.3,  size= 1, fill = \"magenta\")+\n  geom_sf(data = valpo_com_buffer,  color =\"orange\", alpha=1,  size= 1, fill = NA)+\n  geom_sf(data = valpo_com_buffer_menos,  color =\"red\", alpha=1,  size= 1, fill = NA)+\n  ggtitle(\"Buffer de la comuna de Valparaíso - 1000 mts.\" ) +\n  theme_bw() +\n  theme(panel.grid.major = element_line(colour = \"gray80\"), \n        panel.grid.minor = element_line(colour = \"gray80\"))\n\n\n\n\n\n\n\nFigure 3.5: Buffer de la comuna de Valparaíso 1000 y 500 metros.\n\n\n\n\n\n\n\nTransformaciones Binarias\nLos transformadores binarios son funciones que devuelven una geometría basada en operar sobre un par de geometrías. Incluyen:\n\n\n\n\n\n\n\n\nfunción\ndevuelve\noperador infijo\n\n\n\n\nintersection\nlas geometrías superpuestas para un par de geometrías\n&\n\n\nunion\nla combinación de las geometrías; elimina límites internos y puntos, nodos o segmentos de línea duplicados\n|\n\n\ndifference\nlas geometrías de la primera después de eliminar la superposición con la segunda geometría\n/\n\n\nsym_difference\nlas combinaciones de las geometrías después de eliminar donde se intersectan; la negación (opuesto) de intersection\n%/%",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Datos Vectoriales</span>"
    ]
  },
  {
    "objectID": "datos_vectoriales.html#sec-dataframes",
    "href": "datos_vectoriales.html#sec-dataframes",
    "title": "3  Datos Vectoriales",
    "section": "3.5 Ejemplo de Delitos",
    "text": "3.5 Ejemplo de Delitos\nEn esta sessión se realizará un flujo de trabajo para el análisis de delitos a nivel comunal utilizando R. Que contempla desde la lectura de la base de información (excel de delitos), agregar información de categorías, hacer filtros, resúmenes estadísticos (tablas dinámicas) y finalmente visualizaciones gráficas y espaciales.\n\n3.5.1 Lectura de una tabla\nSe leerá el archivo excel que se vio la semana pasada de delitos comunales.\n\nlibrary(openxlsx) # trabajar con archivos Excel\nlibrary(plotly) # gráficos dinámicos\ndelitos_tbl &lt;- read.xlsx(\"data/excel/delitos_comunales.xlsx\")\n\n# str(delitos_tbl)\n\nver los primeros 6 registros\n\nhead(delitos_tbl)\n\n  REGION                       NOM_REGION PROVINCIA  NOM_PROVIN COMUNA\n1     05             REGIÓN DE VALPARAÍSO       056 SAN ANTONIO  05602\n2     13 REGIÓN METROPOLITANA DE SANTIAGO       135   MELIPILLA  13502\n3     08                REGIÓN DEL BIOBÍO       083      BIOBÍO  08314\n4     01               REGIÓN DE TARAPACÁ       011     IQUIQUE  01107\n5     03                REGIÓN DE ATACAMA       033      HUASCO  03302\n6     10              REGIÓN DE LOS LAGOS       102      CHILOÉ  10202\n       NOM_COMUNA PERSONAS Tipo.Participante Subgrupo HOMBRE_delitos\n1       ALGARROBO    13794           VICTIMA Abigeato              0\n2           ALHUÉ     6365           VICTIMA Abigeato              1\n3     ALTO BIOBÍO     5823           VICTIMA Abigeato              2\n4   ALTO HOSPICIO   106297           VICTIMA Abigeato              0\n5 ALTO DEL CARMEN     5280           VICTIMA Abigeato              0\n6           ANCUD    38845           VICTIMA Abigeato              9\n  MUJER_delitos TOTAL_delitos\n1             0             0\n2             0             1\n3             3             5\n4             0             0\n5             0             0\n6             1            10",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Datos Vectoriales</span>"
    ]
  },
  {
    "objectID": "datos_vectoriales.html#agregar-categoría",
    "href": "datos_vectoriales.html#agregar-categoría",
    "title": "3  Datos Vectoriales",
    "section": "3.6 Agregar Categoría",
    "text": "3.6 Agregar Categoría\nCategorizar los Delitos:\nPrimeros veremos los tipos de delitos que existen, contenidos en la columna Subgrupo:\n\nunique(delitos_tbl$Subgrupo)\n\n\n\n[1] \"Abigeato\"                           \"Abusos sexuales\"                   \n[3] \"Amenazas con armas\"                 \"Amenazas o riña\"                   \n[5] \"Animales sueltos en la vía pública\" \"Auxilio al suicidio\"               \n\n\n\nSe muestran los primeros 6 solo para buena visualización en el libro digital, en la práctica deben existir 50 categorias de delitos.\n\nCrear una categoría de delitos\nSe debe crear un grupo de delitos de su interés (Puede elegir los que usted quiera). Para este ejemplo se seleccionarán los delitos de violentos.\n\n#guardo los delitos violentos en un vector\nd_agrupados &lt;- c( \"Lesiones graves o gravísimas\", \"Lesiones menos graves\",\n                  \"Microtráfico de sustancias\", \"Otros homicidios\",\n                  \"Robo con homicidio\", \"Robo violento de vehículo motorizado\",\n                  \"Robos con violencia o intimidación\", \"Tráfico de sustancias\")\n\n# leves o incivilidades\n# d_agrupados &lt;- c( \"Amenazas con armas\", \"Amenazas o riña\", \n#                   \"Desórdenes públicos\", \"Comercio ilegal\" , \n#                   \"Consumo de alcohol y drogas en la vía pública\", \n#                   \"Daños\", \"Lesiones leves\" , \"Desórdenes públicos\",\n#                   \"Desórdenes públicos\", \"Ofensas al pudor\",\n#                   \"Porte de arma cortante o punzante\",\"Receptación\",\n#                   \"Robo de objetos de o desde vehículo\",\n#                   \"Robo por sorpresa\" )\n\nAgregar Categoría de delitos\nPara esto crearemos una nueva columna con la función mutate()\n\ndelitos_tbl &lt;- delitos_tbl %&gt;% \n  mutate(grupo = ifelse(Subgrupo %in% d_agrupados, TRUE, FALSE))\n\n\n# head(delitos_tbl)\n\ncount(delitos_tbl, grupo)\n\n  grupo     n\n1 FALSE 28980\n2  TRUE  5520\n\ndim(delitos_tbl)\n\n[1] 34500    13",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Datos Vectoriales</span>"
    ]
  },
  {
    "objectID": "datos_vectoriales.html#filtros",
    "href": "datos_vectoriales.html#filtros",
    "title": "3  Datos Vectoriales",
    "section": "3.7 Filtros",
    "text": "3.7 Filtros\nFiltrar por Tipo de Participante\n\ndelitos_filtered &lt;- delitos_tbl %&gt;% \n  filter(Tipo.Participante == \"VICTIMA\")\n\nFiltrar por Región\n\n# * Pueden cambiar la región\ndelitos_filtered &lt;- delitos_filtered %&gt;% \n  filter(NOM_REGION == \"REGIÓN DE LA ARAUCANÍA\")\n\nFiltrar por Categortía\n\ndelitos_filtered &lt;- delitos_filtered %&gt;% \n  filter(grupo == T)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Datos Vectoriales</span>"
    ]
  },
  {
    "objectID": "datos_vectoriales.html#generar-resúmenes-similar-a-tablas-dinámicas",
    "href": "datos_vectoriales.html#generar-resúmenes-similar-a-tablas-dinámicas",
    "title": "3  Datos Vectoriales",
    "section": "3.8 Generar Resúmenes (similar a tablas dinámicas)",
    "text": "3.8 Generar Resúmenes (similar a tablas dinámicas)\n\n\n\nSe buscará replicar desde R las operaciones correspondientes a esta tabla dinámica\n\n\n\n\n\n\n\n\ntabla_resumen &lt;- delitos_filtered %&gt;% \n  group_by(NOM_COMUNA) %&gt;% \n  summarise(total_delitos = sum(TOTAL_delitos),\n            pob = min(PERSONAS))\n  \ntabla_resumen\n\n# A tibble: 32 × 3\n   NOM_COMUNA total_delitos   pob\n   &lt;chr&gt;              &lt;dbl&gt; &lt;dbl&gt;\n 1 ANGOL                147 52958\n 2 CARAHUE               38 24458\n 3 CHOLCHOL              33 11581\n 4 COLLIPULLI           108 24439\n 5 CUNCO                 19 17275\n 6 CURACAUTÍN            33 17253\n 7 CURARREHUE            13  7361\n 8 ERCILLA               53  7704\n 9 FREIRE                67 24390\n10 GALVARINO             31 11914\n# ℹ 22 more rows\n\n\nPonderar por población\n\ntabla_resumen &lt;- tabla_resumen %&gt;% \n  mutate(pond_poblacion = total_delitos / pob) %&gt;% \n  mutate(del_10000_hab = pond_poblacion * 10000) %&gt;% \n  mutate(del_10000_hab = round(del_10000_hab,2))  # redondear con 2 decimales\n\nhead(tabla_resumen)\n\n# A tibble: 6 × 5\n  NOM_COMUNA total_delitos   pob pond_poblacion del_10000_hab\n  &lt;chr&gt;              &lt;dbl&gt; &lt;dbl&gt;          &lt;dbl&gt;         &lt;dbl&gt;\n1 ANGOL                147 52958        0.00278          27.8\n2 CARAHUE               38 24458        0.00155          15.5\n3 CHOLCHOL              33 11581        0.00285          28.5\n4 COLLIPULLI           108 24439        0.00442          44.2\n5 CUNCO                 19 17275        0.00110          11  \n6 CURACAUTÍN            33 17253        0.00191          19.1",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Datos Vectoriales</span>"
    ]
  },
  {
    "objectID": "datos_vectoriales.html#visualización-gráfica",
    "href": "datos_vectoriales.html#visualización-gráfica",
    "title": "3  Datos Vectoriales",
    "section": "3.9 Visualización gráfica",
    "text": "3.9 Visualización gráfica\n\ng_barra &lt;- ggplot(tabla_resumen, aes(x = NOM_COMUNA, y = del_10000_hab)) +\n  geom_bar(fill = \"#6a51a3\", color =  \"gray90\", stat = \"identity\", width = 0.7)+\n  coord_flip()+\n  theme_bw()+\n  labs(title=\"Delitos Violentos en la Región de la Araucanía\", \n       y =\"Delitos Violentos / 10000 hebitantes\", x = \"Nombre de Comuna\")+\n  theme(plot.title = element_text(face = \"bold\",colour= \"gray20\", size=12)) \n  \ng_barra\n\n\n\n\n\n\n\n\nGuardar el gráfico de barras como imagen\n\nggsave(plot = g_barra, filename = \"images/del_violentos_R09.png\", width = 8, height = 7)\n\nGenerar gráfico dinámico\n\nggplotly(g_barra)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Datos Vectoriales</span>"
    ]
  },
  {
    "objectID": "datos_vectoriales.html#visualización-espacial",
    "href": "datos_vectoriales.html#visualización-espacial",
    "title": "3  Datos Vectoriales",
    "section": "3.10 Visualización Espacial",
    "text": "3.10 Visualización Espacial\nPrimero se debe unir la tabla resumen delitos con Shapefile de comunas del INE.\nLeer Shapefile de comunas\n\ncomunas_r09 &lt;- st_read(\"data/shape/Comunas_Chile.shp\") %&gt;% \n  filter(NOM_REGION == \"REGIÓN DE LA ARAUCANÍA\")\n\nReading layer `Comunas_Chile' from data source \n  `/Users/denisberroeta/Documents/Docencia/Goblab/geoanalisis_book/data/shape/Comunas_Chile.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 346 features and 9 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -3701691 ymin: 3734031 xmax: 705926.2 ymax: 8065316\nProjected CRS: WGS 84 / UTM zone 19S\n\nhead(comunas_r09)\n\nSimple feature collection with 6 features and 9 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 105710.9 ymin: 5678347 xmax: 264088.7 ymax: 5814662\nProjected CRS: WGS 84 / UTM zone 19S\n  OBJECTID REGION             NOM_REGION PROVINCIA NOM_PROVIN COMUNA NOM_COMUNA\n1      196     09 REGIÓN DE LA ARAUCANÍA       091     CAUTÍN  09102    CARAHUE\n2      197     09 REGIÓN DE LA ARAUCANÍA       091     CAUTÍN  09116   SAAVEDRA\n3      198     09 REGIÓN DE LA ARAUCANÍA       091     CAUTÍN  09121   CHOLCHOL\n4      199     09 REGIÓN DE LA ARAUCANÍA       091     CAUTÍN  09106  GALVARINO\n5      200     09 REGIÓN DE LA ARAUCANÍA       092    MALLECO  09211   VICTORIA\n6      201     09 REGIÓN DE LA ARAUCANÍA       092    MALLECO  09202 COLLIPULLI\n  Shape_Leng Shape_Area                       geometry\n1   2.906029 0.13808364 MULTIPOLYGON (((121386.1 57...\n2   1.208166 0.04046546 MULTIPOLYGON (((116508.5 57...\n3   1.231271 0.04440834 MULTIPOLYGON (((154657.2 57...\n4   1.466943 0.05865461 MULTIPOLYGON (((169736.5 57...\n5   2.049851 0.12969648 MULTIPOLYGON (((200422.2 57...\n6   2.832457 0.13410231 MULTIPOLYGON (((195536.1 58...\n\n\nUnir shafile con tabla resumen\nSe utilizará la función left_join\n\n\n\n\n\n\ncomunas_r09 &lt;- comunas_r09 %&gt;% \n  left_join(tabla_resumen, by = \"NOM_COMUNA\")\n\nhead(comunas_r09)\n\nSimple feature collection with 6 features and 13 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 105710.9 ymin: 5678347 xmax: 264088.7 ymax: 5814662\nProjected CRS: WGS 84 / UTM zone 19S\n  OBJECTID REGION             NOM_REGION PROVINCIA NOM_PROVIN COMUNA NOM_COMUNA\n1      196     09 REGIÓN DE LA ARAUCANÍA       091     CAUTÍN  09102    CARAHUE\n2      197     09 REGIÓN DE LA ARAUCANÍA       091     CAUTÍN  09116   SAAVEDRA\n3      198     09 REGIÓN DE LA ARAUCANÍA       091     CAUTÍN  09121   CHOLCHOL\n4      199     09 REGIÓN DE LA ARAUCANÍA       091     CAUTÍN  09106  GALVARINO\n5      200     09 REGIÓN DE LA ARAUCANÍA       092    MALLECO  09211   VICTORIA\n6      201     09 REGIÓN DE LA ARAUCANÍA       092    MALLECO  09202 COLLIPULLI\n  Shape_Leng Shape_Area total_delitos   pob pond_poblacion del_10000_hab\n1   2.906029 0.13808364            38 24458    0.001553684         15.54\n2   1.208166 0.04046546            32 12380    0.002584814         25.85\n3   1.231271 0.04440834            33 11581    0.002849495         28.49\n4   1.466943 0.05865461            31 11914    0.002601981         26.02\n5   2.049851 0.12969648           107 34103    0.003137554         31.38\n6   2.832457 0.13410231           108 24439    0.004419166         44.19\n                        geometry\n1 MULTIPOLYGON (((121386.1 57...\n2 MULTIPOLYGON (((116508.5 57...\n3 MULTIPOLYGON (((154657.2 57...\n4 MULTIPOLYGON (((169736.5 57...\n5 MULTIPOLYGON (((200422.2 57...\n6 MULTIPOLYGON (((195536.1 58...\n\n\n\nlibrary(viridis)\ndel_r09_m &lt;- ggplot() +\n  geom_sf(data = comunas_r09, aes(fill = del_10000_hab), alpha=0.8,  size= 0.5)+\n  scale_fill_viridis_c()+\n  ggtitle(\"Delitos Violentos en la Región de la Araucanía\" ) +\n  theme_bw() +\n  # theme(legend.position=\"none\")+\n  theme(panel.grid.major = element_line(colour = \"gray80\"), \n        panel.grid.minor = element_line(colour = \"gray80\"))\n\ndel_r09_m\n\n\n\n\n\n\n\n\nGuardar el Mapa como imagen\n\nggsave(plot = del_r09_m, filename = \"images/map_del_violentos_R09.png\", width = 8, height = 7)\n\nMapa Dinámico\n\nlibrary(mapview)\n\nmapview(comunas_r09, zcol = \"del_10000_hab\", alpha.regions = 0.9)",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Datos Vectoriales</span>"
    ]
  },
  {
    "objectID": "datos_vectoriales.html#guardar-resultados",
    "href": "datos_vectoriales.html#guardar-resultados",
    "title": "3  Datos Vectoriales",
    "section": "3.11 Guardar Resultados",
    "text": "3.11 Guardar Resultados\n\n# Excel\nwrite.xlsx(tabla_resumen, file = \"data/excel/R09_del_violentos.xlsx\")\n\n# Shapefile \nst_write(comunas_r09, \"data/shape/R09_del_violentos.shp\", delete_dsn = T)\n\n# rds\nsaveRDS(object = comunas_r09,file = \"data/rds/R09_del_violentos.rds\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Datos Vectoriales</span>"
    ]
  },
  {
    "objectID": "datos_vectoriales.html#referencias",
    "href": "datos_vectoriales.html#referencias",
    "title": "3  Datos Vectoriales",
    "section": "3.12 Referencias",
    "text": "3.12 Referencias\n\nSimple Features for R\nGeographic Data Science with R: Chapter 5 Vector Geospatial Data\nColores en Ggplot2",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Datos Vectoriales</span>"
    ]
  },
  {
    "objectID": "raster.html",
    "href": "raster.html",
    "title": "4  Datos tipo Raster",
    "section": "",
    "text": "4.1 Objetivos del Módulo",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Datos tipo Raster</span>"
    ]
  },
  {
    "objectID": "raster.html#objetivos-del-módulo",
    "href": "raster.html#objetivos-del-módulo",
    "title": "4  Datos tipo Raster",
    "section": "",
    "text": "Definición de Raster como Objeto Espacial\nRaster en R\nManipulación de datos Raster de imágenes satelitales.\nConstrucción de Indicadores ambientales",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Datos tipo Raster</span>"
    ]
  },
  {
    "objectID": "raster.html#raster-como-objeto-espacial",
    "href": "raster.html#raster-como-objeto-espacial",
    "title": "4  Datos tipo Raster",
    "section": "4.2 Raster como objeto espacial",
    "text": "4.2 Raster como objeto espacial\n\n4.2.1 Definición de Raster\nLos objetos raster representan entidades geográficas dividiendo el espacio físico en celdas discretas cuadradas o rectangulares dispuestas en una cuadrícula.\n\n\n\nRaster espacial\n\n\n\n\n4.2.2 Matriz de un Raster\nUn ráster consta de una matriz de celdas (o píxeles) organizadas en filas y columnas (o una cuadrícula) en la que cada celda contiene un valor que representa información.\n\n\n\nMatirz de datos de un Raster\n\n\n\n\n4.2.3 Resolución Espacial de un Raster\nCuanto más pequeño sea el tamaño de celda, más suave o más detallado será el ráster. Sin embargo, cuanto mayor sea el número de celdas, más tiempo tardará en procesar, aumentándose a su vez la demanda de espacio de almacenamiento.\n\n\n\nResolución espacial de un raster\n\n\n\n\n4.2.4 Referencia Espacial de un Raster\nLa matriz queda representada por un Sistema de coordenadas cartesianas, en las que las filas de la matriz son paralelas al eje x y las columnas al eje y del plano cartesiano\n\n\n\nReferencia espacial",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Datos tipo Raster</span>"
    ]
  },
  {
    "objectID": "raster.html#raster-en-r",
    "href": "raster.html#raster-en-r",
    "title": "4  Datos tipo Raster",
    "section": "4.3 Raster en R",
    "text": "4.3 Raster en R\nA continuación haremos una revisión rápida de manipulación de datos tipo Raster en R para lo cual lo utilizaremos en la librería raster que se encuentra en CRAN.\n\n4.3.1 Creación de un Objeto Raster\n\nlibrary(raster)\nr &lt;- raster(ncol=10, nrow=10)\nvalues(r) &lt;- 1:ncell(r)\nr\n\nclass      : RasterLayer \ndimensions : 10, 10, 100  (nrow, ncol, ncell)\nresolution : 36, 18  (x, y)\nextent     : -180, 180, -90, 90  (xmin, xmax, ymin, ymax)\ncrs        : +proj=longlat +datum=WGS84 +no_defs \nsource     : memory\nnames      : layer \nvalues     : 1, 100  (min, max)\n\n\nVisualización de los creado\n\nplot(r)\n\n\n\n\n\n\n\n\n\n\n4.3.2 Operaciones Básicas sobre un Raster\nLos objetos Raster en R se le puede aplicar operaciones directamente como las detalladas a continuación:\n\nOperaciones Básicas : +, -, *, /\nOperadores Lógicos: &gt;, &gt;=, &lt;, ==, !\nOtras Funciones: abs, round, ceiling, floor, trunc, sqrt, log, log10, exp, cos, sin, atan, tan, max, min, range, prod, sum, any, all.\n\nAlgunos ejemplos\n\ns &lt;- r + 10\ns &lt;- sqrt(s)\ns &lt;- s * r + 5\n\nUna forma de asignar valores honraste de forma aleatoria\n\nr[] &lt;- runif(ncell(r))\nr &lt;- round(r)\n\n\n\n4.3.3 Apilar Layers en un Raster\n\n\n\nReferencia espacial\n\n\n\nr &lt;- raster(ncol=5, nrow=5)\nr[] &lt;- 1\ns &lt;- stack(r, r+1)\nq &lt;- stack(r, r+2, r+4, r+6)\nx &lt;- r + s + q\nx\n\nclass      : RasterBrick \ndimensions : 5, 5, 25, 4  (nrow, ncol, ncell, nlayers)\nresolution : 72, 36  (x, y)\nextent     : -180, 180, -90, 90  (xmin, xmax, ymin, ymax)\ncrs        : +proj=longlat +datum=WGS84 +no_defs \nsource     : memory\nnames      : layer.1, layer.2, layer.3, layer.4 \nmin values :       3,       6,       7,      10 \nmax values :       3,       6,       7,      10 \n\n\n\n\n4.3.4 Funciones Básicas sobre un Raster\nCalc\nCon la librería Raster uno puede aplicar funciones propias utilizando la función calc() cómo veremos a continuación:\n\nr &lt;- raster(ncol=3, nrow=2)\nr[] &lt;- 1:ncell(r)\ngetValues(r)\n\n[1] 1 2 3 4 5 6\n\n# cambiar los valores menores de 4 a NA\ns &lt;- calc(r, fun=function(x){ x[x &lt; 4] &lt;- NA; return(x)} )\nas.matrix(s) # solo para visualizar la respuesta en el libro digital\n\n     [,1] [,2] [,3]\n[1,]   NA   NA   NA\n[2,]    4    5    6\n\n\nOverlay\nEn el caso que quisiera hacer una operación sobre dos o más Raster podría utilizar la función overlay() cómo se observa a continuación:\n\n# Overlay\nw &lt;- overlay(r, s, fun=function(x, y){ x / (2 * sqrt(y)) + 5 } )\nas.matrix(w)\n\n     [,1]     [,2]     [,3]\n[1,]   NA       NA       NA\n[2,]    6 6.118034 6.224745\n\n\nReclassify\n\n# Cambiar los valores entre 0 y 2 a 1, etc.\nx &lt;- reclassify(w, c(0,2,1,  2,5,2, 4,10,3))\nas.matrix(x)\n\n     [,1] [,2] [,3]\n[1,]   NA   NA   NA\n[2,]    3    3    3",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Datos tipo Raster</span>"
    ]
  },
  {
    "objectID": "raster.html#definición-de-conceptos-en-percepción-remotra",
    "href": "raster.html#definición-de-conceptos-en-percepción-remotra",
    "title": "4  Datos tipo Raster",
    "section": "4.4 Definición de Conceptos en Percepción Remotra",
    "text": "4.4 Definición de Conceptos en Percepción Remotra\n\nPercepción Remota:\n\nPercepción Remota o en una disciplina científica que entrega un amplio conjunto de conocimientos y tecnologías utilizadas para observación, análisis, la interpretación de fenómenos en el territorio. La percepción remota nos permite efectuar observaciones y mediciones de la superficie terrestre mediante dispositivos remotos instalados sobre plataformas como satélites, aviones y actualmente hasta en drones. Los sensores instalados en estas plataformas miden una gran variedad de datos como radiaciones electromagnéticas, espectro electromagnético, perturbaciones atmosféricas, firmas espectrales y captura de imágenes, entre otros.\n\n\n\n\n\nPercepción Remota\n\n\n\nPercepción Remota Satelital:\n\nLos satélites llevan instrumentos o sensores que miden la radiación electromagnética proveniente del sistema tierra - atmósfera. La intensidad de la radiación reflejada y emitida al espacio es influenciada por las condiciones en la superficie y la atmósfera.\n\n\n\n\n\nPercepción Remota Satelital\n\n\n\nEspectro Electromagnético:\n\nEs un conjunto de frecuencias o longitudes de onda en los que se organiza la radiación electromagnética. Abarca las radiaciones entre los rayos gamma y las ondas de radio.\n\n\n\n\n\nEspectro Electromagnético\n\n\n\n\n\nEspectro Electromagnético Satelital\n\n\n\nCaracterísticas de Satélites y Sensores:\n\nLa energía emitida o reflejada por la superficie terrestre es un fenómeno continuo en 4 cuatro dimensiones: espacio, tiempo, longitud de onda y radiancia.\n\n\n\n\n\nSatélites y Sensores\n\n\nResolución espacial: Tamaño del pixel o celda del raster que contiene a la banda espectral (Landsat: 30 m x 30 m)\n\n\n\nResolución espacial\n\n\nResolución temporal: Tiempo entre imágenes sucesivas (Landsat 16 días)\n\n\n\nResolución temporal\n\n\nResolución espectral: Número y rango de las regiones del espectro electromagnético para los que capta información el sensor .\n\n\n\nResolución espectral\n\n\n\nResolución radiométrica: Indica el número de intervalos de intensidad que puede captar el sensor (escala de grises) (Landsat 5 y 7: 256)\n\n\n\n\nResolución radiométrica\n\n\n\n4.4.1 Aplicaciones de Percepción Remota\n\nAplicaciones Generales: Ambientales\n\nBosque Nativo: Superficie anual, Vigor vegetacional y superficie incendiada\nGlaciares: Superficie de cuerpos glaciares\nAmbiente urbano: Superficie anual cubierta con vegetación por manzana urbana\nAmbiente marino costero: Calidad anual del agua superficial del mar\nHumedales Alto Andino: Superficie anual vegetada e inundada en el humedal\n\n\n\n\nAplicaciones Ambientales; temperatura superficial de glaciar\n\n\nAplicaciones Generales: Antrópicas\n\nMancha Urbana: Crecimiento evolutivo\nContaminación de Recursos Naturales: Borde Costero, red hídrica, cuerpos de agua, suelos, aire.\nDeforestación: Actividad de industria a Forestal\nMonitoreo de Edificaciones: Construcción de Industrias, asentamientos, cualquier edificación de grandes dimensiones\n\n\n\n\nAplicaciones Antrópicas; deforestación",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Datos tipo Raster</span>"
    ]
  },
  {
    "objectID": "raster.html#manipulación-de-datos-raster-de-imágenes-satelitales.",
    "href": "raster.html#manipulación-de-datos-raster-de-imágenes-satelitales.",
    "title": "4  Datos tipo Raster",
    "section": "4.5 Manipulación de datos Raster de imágenes satelitales.",
    "text": "4.5 Manipulación de datos Raster de imágenes satelitales.\n\nLeer Archivos Raster (Imagen Satelital)\nVisualización Raster\nReproyectar imagen tipo Raster (Sistema de Referencia de Coords.)\nCortar Imagen Raster desde archivo Shapefile\nCombinacionaciones de Bandas Satelitales\n\n\n4.5.1 Leer Archivos Raster (Imagen Satelital)\n\n\n\n\n\n\nUn raster que proviene de un insumo satelital normalmente tiene más de una banda o también llamada layer\n\n\n\nlibrary(raster)\nOLI &lt;- brick(\"data/raster/corte_rm_m.tif\")\nnames(OLI) &lt;- c(\"aerosol\", \"blue\", \"green\", \"red\", \"nir\", \"swir1\", \"swir2\", \"thermal\")\nOLI\n\n\n\nclass      : RasterBrick \ndimensions : 4830, 5978, 28873740, 8  (nrow, ncol, ncell, nlayers)\nresolution : 30, 30  (x, y)\nextent     : 249045, 428385, 6211135, 6356035  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=19 +south +datum=WGS84 +units=m +no_defs \nsource     : corte_rm_m.tif \nnames      :  aerosol,     blue,    green,      red,      nir,    swir1,    swir2,  thermal \nmin values : 7036.001, 6386.001, 5463.000, 4955.001, 4585.000, 4639.001, 4854.000, 4832.000 \nmax values :    49865,    52771,    59275,    56142,    59312,    59124,    54972,    14789 \n\n\n\n\n4.5.2 Visualización Raster\n\nplotRGB(OLI, r = 4, g = 3, b = 2, stretch = \"lin\")\n\n\n\n\n\n\n\n# viewRGB(OLI, r = 4, g = 3, b = 2)\n\n\n\n4.5.3 Cortar Imagen Raster desde archivo Shapefile\nLeer archivo vectorialde la Región Metropolitana\n\nlibrary(sf)\n\n# Leer geometrías Nacional y filtrar RM\nregion_met &lt;- st_read(\"data/shape/Comunas_Chile.shp\") %&gt;% \n  filter(REGION == \"13\")\n\nReading layer `Comunas_Chile' from data source \n  `/Users/denisberroeta/Documents/Docencia/Goblab/geoanalisis_book/data/shape/Comunas_Chile.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 346 features and 9 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -3701691 ymin: 3734031 xmax: 705926.2 ymax: 8065316\nProjected CRS: WGS 84 / UTM zone 19S\n\n# selección de Comuna\nmi_comuna &lt;-  \"LAS CONDES\"\ncomuna &lt;- region_met %&gt;% filter(NOM_COMUNA == mi_comuna)\n\n\nggplot() +\n  geom_sf(data = comuna, fill = NA, color =\"orange\", \n          alpha=0.8,  size= 1)+\n  ggtitle(paste0(\"COMUNA DE \", mi_comuna) ) +\n  theme_bw() +\n  theme(panel.grid.major = element_line(colour = \"gray80\"), \n        panel.grid.minor = element_line(colour = \"gray80\"))\n\n\n\n\n\n\n\n\nRealizar el corte de la comuna que seleccione\n\ncomuna_img &lt;- mask(crop(OLI, extent(comuna), snap=\"out\"), comuna)\ncomuna_img\n\nclass      : RasterBrick \ndimensions : 449, 562, 252338, 8  (nrow, ncol, ncell, nlayers)\nresolution : 30, 30  (x, y)\nextent     : 350505, 367365, 6293905, 6307375  (xmin, xmax, ymin, ymax)\ncrs        : +proj=utm +zone=19 +south +datum=WGS84 +units=m +no_defs \nsource     : memory\nnames      : aerosol,  blue, green,   red,   nir, swir1, swir2, thermal \nmin values :    8465,  7604,  6500,  5924,  5520,  5191,  5197,    5002 \nmax values :   19119, 20517, 21248, 23237, 29344, 30012, 31166,    5512 \n\nplotRGB(comuna_img, r = 4, g = 3, b = 2, stretch = \"lin\")\n\n\n\n\n\n\n\n\n\ncomuna_img_df &lt;- as.data.frame(comuna_img[[-8]])\nsuppressMessages(library(tidyr))\n#Transformar una base con dos columnas \nbase &lt;- gather(na.omit(comuna_img_df), key = \"Banda\", value = \"Valor\")\n\nsuppressMessages(library(ggplot2))\nhist_bandas &lt;- ggplot(base, aes(Valor, fill = Banda)) +\n  geom_histogram(bins = 60) + facet_wrap( ~ Banda) + \n  theme(plot.subtitle = element_text(size = 10, hjust = 0.5),\n        axis.ticks = element_line(colour = \"gray10\"),\n        plot.title = element_text(size = 14, hjust = 0.5,\n        face = \"bold\", colour = \"gray30\"), \n        panel.background = element_rect(fill = \"gray98\")) +\n  labs(title = \"Histograma de las Bandas Espectrales Landsat 8\", \n       subtitle = mi_comuna)\n\n\n\nhist_bandas\n\n\n\n\n\n\n\n\n\n\n4.5.4 Reproyectar imagen tipo Raster (Sistema de Referencia de Coords.)\n\ncrs_latlon &lt;- \"+proj=longlat +datum=WGS84 +no_defs\"# geográficas o elipsoidales\ncrs_utm &lt;- \"+proj=utm +zone=19 +south +datum=WGS84 +units=m +no_defs\" # UTM o cartográficas\n\n# utm a latlon\ncomuna_img &lt;- projectRaster(comuna_img, crs = crs_latlon)\n\n# latlon a utm\ncomuna_img &lt;- projectRaster(comuna_img, crs = crs_utm)\n\n\n\n4.5.5 Combinacionaciones de Bandas Satelitales\n Referencias: https://mappinggis.com/2019/05/combinaciones-de-bandas-en-imagenes-de-satelite-landsat-y-sentinel/\n\n# Falso Color (7,6,4)\nplotRGB(comuna_img, r = 7, g = 6, b = 4, stretch = \"lin\")\n\n\n\n\n\n\n\n\n\n# Infrarojo (5,4,3)\nplotRGB(comuna_img, r = 5, g = 4, b = 3, stretch = \"lin\")\n\n\n\n\n\n\n\n\n\n# Agricultura (6,5,2)\nplotRGB(comuna_img, r = 6, g = 5, b = 2, stretch = \"lin\")\n\n\n\n\n\n\n\n\n\n# Penetración de la Radiación en la Atmósfera (7,6,5)\nplotRGB(comuna_img, r = 7, g = 6, b = 5, stretch = \"lin\")\n\n\n\n\n\n\n\n\n\n# Uso del Suelo / Masas de Agua (5,6,4)\nplotRGB(comuna_img, r = 5, g = 6, b = 4, stretch = \"lin\")\n\n\n\n\n\n\n\n\n\n# Infrarojo de Onda Corta (7,5,4)\nplotRGB(comuna_img, r = 7, g = 5, b = 4, stretch = \"lin\")\n\n\n\n\n\n\n\n\n\n# Análisis de Vegetación (6,5,4)\nplotRGB(comuna_img, r = 6, g = 5, b = 4, stretch = \"lin\")\n\n\n\n\n\n\n\n\n\n# Análisis de Vegetación Sana (5,6,2)\nplotRGB(comuna_img, r = 5, g = 6, b = 2, stretch = \"lin\")",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Datos tipo Raster</span>"
    ]
  },
  {
    "objectID": "raster.html#construcción-de-indicadores-ambientales",
    "href": "raster.html#construcción-de-indicadores-ambientales",
    "title": "4  Datos tipo Raster",
    "section": "4.6 Construcción de Indicadores ambientales",
    "text": "4.6 Construcción de Indicadores ambientales\n\nCalcular NDVI\nCalcular Indicador Cobertura Vegetacional\n\n\n4.6.1 Calcular NDVI\n\n\n\nFórmula para el cáculo de NDVI\n\n\nCreación de la función de NDVI\n\n#NDVI(img, red, NIR)\nNDVI &lt;- function(img, i, k) {\n   bi &lt;- img[[i]]\n   bk &lt;- img[[k]]\n   vi &lt;- (bk - bi) / (bk + bi)\n   return(vi)\n}\n\n\nNDVI_com &lt;- NDVI(comuna_img, 4, 5)\n\nVisualización de NDVI en ggplot2\n\n# rastero to df (na omit)\nNDVI_com_df &lt;- raster::as.data.frame(NDVI_com, xy = TRUE) %&gt;% na.omit()\n\n#paleta\npal_ndvi&lt;- colorRampPalette(c(\"gray20\", \"yellow\", \"green\",\"springgreen4\"))( 200 )\n\nggplot() +\n  geom_raster(data = NDVI_com_df , \n             aes(x = x, y = y, \n                  fill = layer)) + \n  scale_fill_gradientn(name = \"NDVI\", colors = pal_ndvi)+\n  coord_fixed()+\n  ggtitle(paste0(\"NDVI DE \", mi_comuna) ) +\n  theme_bw() +\n  theme(panel.grid.major = element_line(colour = \"gray80\"), \n        panel.grid.minor = element_line(colour = \"gray80\"))\n\n\n\n\n\n\n\n\n\n\n4.6.2 Calcular Indicador de Cobertura Vegetacional\nSe ha estudiado que el umbral de valores de NDVI superiores a 0.4 se entienede como vegetación y sana\n\nhist(NDVI_com, col=\"springgreen4\", main=\"Histograma NDVI\",\n  ylab=\"Número de Pixeles\", xlab=\"valor NDVI\")\n\n\n\n\n\n\n\nFigure 4.1: Histograma de valores de NDVI\n\n\n\n\n\nConsiderando el gráfico anterior se deberá crear una función para definir umbral y eliminar (transformar NA) los valores de pixeles que esten bajo ese umbral.\n\n#función para definir umbral\ncorte_eq_may &lt;- function(value) {\n  function(x) {\n    ifelse(x &gt;= value, 1, NA)\n  }\n}\n\n\nlibrary(mapview)\n\nmapview(NDVI_com, na.color = \"transparent\")\n\n\n\n\n\nAplicación de la función para definir umbral utilizando calc():\n\nvegetacion &lt;- calc(NDVI_com, fun = corte_eq_may(value = 0.30))\n\n\nvegetacion_df &lt;- raster::as.data.frame(vegetacion, xy = TRUE) %&gt;% na.omit()\nggplot() +\n  geom_sf(data = comuna, fill = NA, color =\"orange\", \n          alpha=0.8,  size= 0.5)+\n  geom_raster(data = vegetacion_df , \n             aes(x = x, y = y, \n                  fill = layer)) + \n  scale_fill_gradientn(name = \"Veg\", colors = \"springgreen4\")+\n  ggtitle(paste0(\"VEGETACIÓN DE \", mi_comuna) ) +\n  theme_bw() +\n  theme(panel.grid.major = element_line(colour = \"gray80\"), \n        panel.grid.minor = element_line(colour = \"gray80\"))\n\n\n\n\n\n\n\n\nVisualización Dinámica\n\nmview &lt;- mapview(vegetacion, na.color = \"transparent\", \n                 col.regions = \"springgreen4\", legend =FALSE)+\n  mapview(comuna, color = \"magenta\", alpha.region =0, size = 2,\n          legend =FALSE)\nmview\n\n\n\n\n\n\n\nCrear Indicador por manzana:\n\nPara esto se debe contar los pixeles que existe por manzana calcular su superficie sabiendo la resolución espacila (30x30) y dividirla por el toral de superficie de la manzana, afin de obtener un porcentaje de cobertura vegetal por manzana.\n\n\nLeer manzanas del Censo\n\nmz_comuna &lt;- readRDS(\"data/censo/manzanas.rds\") %&gt;% \n  filter(NOM_COM == mi_comuna) %&gt;% \n  st_transform(32719)\n\nCalcular el área por cada polígono\n\nmz_comuna &lt;-  mz_comuna %&gt;% \n  mutate(AREA = as.numeric(st_area(.))) #mts2\n\nContar los piexeles por manzana y multiplicar por área que representan estos pixeles. Para contar la cantidad de pixeles por manzana usaremos la función exacextract()\n\nlibrary(exactextractr)\n\nmz_comuna  &lt;- mz_comuna %&gt;% \n  mutate(pix_veg = exact_extract(vegetacion,y = ., 'sum', progress = FALSE)) %&gt;% \n  mutate(area_veg = pix_veg * 30 * 30) %&gt;% # resolución espacial landsat (30*30)\n  mutate(ICV = round((area_veg /AREA)*100, 1))  \n\nVisualización del Indicador\n\nggplot() +\n  geom_sf(data = mz_comuna, aes(fill = ICV), color =\"gray70\", \n          alpha=0.8,  size= 0.1)+\n  scale_fill_distiller(palette= \"Greens\", direction = 1)+\n  ggtitle(\"Indicador de Cobertura Vegetal (ICV) - Urbano\") +\n  theme_bw() +\n  theme(panel.grid.major = element_line(colour = \"gray80\"), \n        panel.grid.minor = element_line(colour = \"gray80\"))",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Datos tipo Raster</span>"
    ]
  },
  {
    "objectID": "r_project.html",
    "href": "r_project.html",
    "title": "5  R Project",
    "section": "",
    "text": "5.1 ¿Qué es R Project?\nR es un lenguaje programación multiparadigma (procedural, imperativo, orientado a objetos y funcional) enfocado a aplicaciones estadísticas. Por estadísticas se debe entender también los campos de estudio que se basan o las utilizan como económía, finanzas, ciencia de datos, machine learning, etc.",
    "crumbs": [
      "Anexos",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>R Project</span>"
    ]
  },
  {
    "objectID": "r_project.html#qué-es-r-project",
    "href": "r_project.html#qué-es-r-project",
    "title": "5  R Project",
    "section": "",
    "text": "5.1.1 Ventajas de Utilizar R Project\n1. R es un software libre\n\nLa libertad de ejecutar el programa como desee y con cualquier propósito\nEstudiar el funcionamiento del programa y adaptarlo a sus necesidades.\nRescribir copias para ayudar a los demás.\nManejar el programa y publicar las mejorar, de manera que toda comunidad se beneficie.\n\n2. R es multiplataforma\n\nR funciona en Mac, Windows y en numerosos sistemas UNIX. Esto significa que cualquier persona puede trabajar con tus datos, figuras, análisis y más importante aún usar tus instrucciones (también conocido como scripts o código) para generar las figuras y el análisis. Así que cualquier persona, y en cualquier lugar del mundo, con acceso a cualquier SO puede usar R sin ninguna licencia.\n\n3. R es de código abierto\n\nExiste una gran comunidad de voluntarios trabajando para mejorarlo, lo cual permite ser moldeado y dirigido a cuestiones específicas. Creando así programas y paquetes que funcionen en el entorno R. Programas tales como R-studio, Java GUI for R, R- commander, RKWard, entre otros, y con más de 18000 paquetes indexado en CRAN, Biocoductor, GitHub y R-Forge.\n\n4. Todo dentro de un mismo entorno\n\nR remplaza la combinación de varios programas para el proceso de análisis de datos, por ejemplo Excel, ArcGis, QGis, SigmaPlot, entre otros. Esto no solo resulta en el alto costo de las licencias de múltiples programas, si no también, en la gran cantidad de archivos con diferentes formatos que no podrían leer otros programas. En cambio con solo utilizar R, puedes realizar todo el análisis de datos e inclusive leer archivos de diferentes formatos.\n\n\n\n5.1.2 Desventajas de utilizar R\n\nR tiene una vasta documentación de ayuda, descripción de paquetes y de funciones, que es difícil encontrar información específica en un momento dado.\nLos mensajes de error que R nos muestra, no es específica sobre los fallos que estamos realizando y solo un usuario con cierta experiencia en el uso de R puede saberlo.",
    "crumbs": [
      "Anexos",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>R Project</span>"
    ]
  },
  {
    "objectID": "r_project.html#instalación-de-r-project",
    "href": "r_project.html#instalación-de-r-project",
    "title": "5  R Project",
    "section": "5.2 Instalación de R Project",
    "text": "5.2 Instalación de R Project\n\n5.2.1 Instalación de R Project\nPrimero se debe instalar R Project desde su sitio oficial (https://cran.r-project.org/bin/windows/base/), se ejecuta el instalador que se descargó depende del sistema operativo del PC, como se muestra en las siguientes figuras:\n\n\n\n5.2.2 Instalación de R para Windows\n\n\n\n\n\n5.2.3 Instalar Rtools (solo Sistema Operativo Windows)\n\n\n\n\n\n\n\n\n5.2.4 Instalación de R para Mac\n\n\n\nR Project Ejecutándose",
    "crumbs": [
      "Anexos",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>R Project</span>"
    ]
  },
  {
    "objectID": "r_project.html#instalación-de-rstudio",
    "href": "r_project.html#instalación-de-rstudio",
    "title": "5  R Project",
    "section": "5.3 Instalación de RStudio",
    "text": "5.3 Instalación de RStudio\nSe recomienta instalar Rstudio, que es Interfaz de Usuario de R Project, desde su sitio web oficial, el cual permite acceder con mayor facilidad a sus funciones y potencialidades de R.\n\n\n\n\n\n\n\n\n\n5.3.1 RStudio Cloud\nRStudio Cloud es una versión ligera del IDE RStudio alojada en la la nube que permite a cualquiera hacer, compartir, enseñar y aprender Ciencias de Datos Online. Tiene una versión gratuita limitada.\n\n5.3.1.1 Características:\n\nAnalyze your data using the RStudio IDE, directly from your browser.\nShare projects with your team, class, workshop or the world.\nTeach data science with R to your students or colleagues.\nLearn data science in an instructor-led environment or with interactive tutorials.",
    "crumbs": [
      "Anexos",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>R Project</span>"
    ]
  },
  {
    "objectID": "r_project.html#instalar-librerías",
    "href": "r_project.html#instalar-librerías",
    "title": "5  R Project",
    "section": "5.4 Instalar Librerías",
    "text": "5.4 Instalar Librerías\n\n5.4.1 Librerías en R\nLas librerías o paquetes en R corresponden a una colección de funciones encapsuladas y diseñadas para atender una tarea específica. Por ejemplo, hay paquetes para trabajo visualización geoespacial, análisis psicométricos, mineria de datos, interacción con servicios de internet y muchas otras cosas más.\nEstos paquetes se encuentran alojados principalmente en CRAN (Comprehensive R Archive Network), así que pasan por un control riguroso antes de estar disponibles para su uso generalizado, al día de hoy (29.11.2021) existen 18498 paquetes disponibles. En el siguiente enlace se deja una lista de temas y sus librerías asociadas disponibles, con una breve descripción (enlace)\nAunque las versiones de prueba de una librería pueden estar disponible en Github (Respositorio de Control de Versiones) de cada autor.\n\n\n5.4.2 Ejemplo de Instalación de Librerías desde R\nPodemos instalar paquetes usando la función install.packages(), dando como argumento el nombre del paquete que deseamos instalar, entre comillas.\nPara instalar librerías se puede hacer directamente desde la consola de RStudio, por ejemplo:\n\ninstall.packages(\"dplyr\") # Se puede instalar más de una librería a la vez\n\n\n\n5.4.3 Ejemplo de Instalación de Librerías desde Rstudio\nTambién se pude instalar librerías del Panel “Packages”\n\n\n\nY por último se puede instalar desde Pestaña “Tools” -&gt; “Install Packages”:",
    "crumbs": [
      "Anexos",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>R Project</span>"
    ]
  },
  {
    "objectID": "r_project.html#sec-wd",
    "href": "r_project.html#sec-wd",
    "title": "5  R Project",
    "section": "5.5 Definición de Directorios de Trabajos",
    "text": "5.5 Definición de Directorios de Trabajos\nDefinir directorio de Trabajo con RStudio\n\n\n\n\n\n\nDefinir Directorio de Trabajo con una función\n\nsetwd(\"~/OneDrive - Universidad Adolfo Ibanez/FONDECYT/capacitacion_SPD\")\n\nConsultar Directorio de Trabajo\n\ngetwd()\n\n[1] \"/Users/denisberroeta/Documents/Docencia/Goblab/geoanalisis_book\"",
    "crumbs": [
      "Anexos",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>R Project</span>"
    ]
  },
  {
    "objectID": "r_project.html#referencias",
    "href": "r_project.html#referencias",
    "title": "5  R Project",
    "section": "5.6 Referencias:",
    "text": "5.6 Referencias:\n\nR para Ciencia de Datos\nRStudio para Estadística Descriptiva en Ciencias Sociales\nhttps://bookdown.org/jboscomendoza/r-principiantes4/estructuras-de-control.html",
    "crumbs": [
      "Anexos",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>R Project</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Lefebvre, Henri. 1974. “La Production de\nlespace.” L Homme Et La\nSociété 31 (1): 15–32. https://doi.org/10.3406/homso.1974.1855.\n\n\nTobler, W. R. 1970. “A Computer Movie Simulating Urban Growth in\nthe Detroit Region.” Economic Geography 46 (June): 234.\nhttps://doi.org/10.2307/143141.",
    "crumbs": [
      "References"
    ]
  }
]